# Stage 1: Build the MQTT Interface and the auth server
FROM golang:1.22.5-alpine3.20 AS go-builder
WORKDIR /mqttmtd/go
COPY ./go/ /mqttmtd/go/
RUN cd mqttinterface && go build -o mqttinterface .
RUN cd authserver && go build -o authserver .

# Stage 2: Final stage
FROM eclipse-mosquitto:2.0.18
WORKDIR /mqttmtd/go

# Copy the built binaries from previous stages
COPY --from=go-builder /mqttmtd/go/mqttinterface/mqttinterface /mqttmtd/mqttinterface
COPY --from=go-builder /mqttmtd/go/authserver/authserver /mqttmtd/authserver

# Copy configuration files and start script
COPY ./confs/mosquitto-plain-localonly_11883.conf /mosquitto/config/mosquitto.conf
COPY ./confs/mosquitto-tls_8883.conf /mosquitto/config/mosquitto-tls.conf
COPY --chmod=0700 ./confs/acl.acl /mosquitto/config/acl.acl
COPY --chmod=0700 ./confs/dhparam.pem /mosquitto/config/dhparam.pem
COPY ./certs/ca/ /mqttmtd/certs/ca/
COPY ./certs/ca/ /mosquitto/config/certs/ca/
COPY ./certs/server/ /mqttmtd/certs/server/
COPY ./certs/server/ /mosquitto/config/certs/server/
COPY ./acl.yml /mqttmtd/acl.yml
COPY ./server_start.sh /mqttmtd/server_start.sh

# Create logs directory
RUN mkdir /mqttmtd/logs

# Make the start.sh script executable
RUN chmod +x /mqttmtd/server_start.sh

# Expose necessary ports
# EXPOSE 8080
# EXPOSE 1883
# EXPOSE 8883
# EXPOSE 18883

# Start all services and log output
CMD ["/mqttmtd/server_start.sh"]