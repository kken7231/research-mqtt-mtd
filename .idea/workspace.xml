<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/rust-mqttmtd/Cargo.toml">
      <package file="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$/rust-mqttmtd/mqttinterface">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$/rust-mqttmtd/authserver">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$/rust-mqttmtd/testing">
        <enabledFeature name="default" />
      </package>
      <package file="$PROJECT_DIR$/rust-mqttmtd/tokenmgr">
        <enabledFeature name="default" />
      </package>
    </cargoProject>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1bc01236-a6ec-4cbd-8cf4-711f3ebc56a4" name="Changes" comment="sync">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker/Dockerfiles/Dockerfile.client_wrapper" beforeDir="false" afterPath="$PROJECT_DIR$/docker/Dockerfiles/Dockerfile.client_wrapper" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/Cargo.lock" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/Cargo.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/authserver/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/authserver/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/authserver/src/atl.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/authserver/src/atl.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/authserver/src/issuer.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/authserver/src/issuer.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/authserver/src/lib.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/authserver/src/lib.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/authserver/src/verifier.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/authserver/src/verifier.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd/src/auth_serv/error.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd/src/auth_serv/error.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd/src/auth_serv/issuer.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd/src/auth_serv/issuer.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd/src/socket/plain.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd/src/socket/plain.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd/src/socket/tls.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/libmqttmtd/src/socket/tls.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/mqttinterface/src/lib.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/mqttinterface/src/lib.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/src/config.rs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/src/errors.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/src/errors.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/src/lib.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/src/lib.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/src/tokenset.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/src/tokenset.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/tests/integration_tests.rs" beforeDir="false" afterPath="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/tests/integration_tests.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/mosquitto/conf/plain.conf" beforeDir="false" afterPath="$PROJECT_DIR$/tests/mosquitto/conf/plain.conf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/mosquitto/conf/tls.conf" beforeDir="false" afterPath="$PROJECT_DIR$/tests/mosquitto/conf/tls.conf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/mosquitto/conf/websocket.conf" beforeDir="false" afterPath="$PROJECT_DIR$/tests/mosquitto/conf/websocket.conf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/mosquitto/conf/wss.conf" beforeDir="false" afterPath="$PROJECT_DIR$/tests/mosquitto/conf/wss.conf" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="RsBuildProfile:test" />
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;kken7231&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/kken7231/research-mqtt-mtd&quot;,
    &quot;accountId&quot;: &quot;fc29d802-9af5-448f-9539-73d8dbfc546c&quot;
  }
}</component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="tvbXeMBN" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2wRUFjSC7qjFRproUKCR9tWvMF8" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.Compose.executor": "Run",
    "Docker.plain-server.executor": "Run",
    "Docker.tls-server.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.rust.reset.selective.auto.import": "true",
    "git-widget-placeholder": "v2",
    "last_opened_file_path": "/Users/kentarito/git/research-mqtt-mtd/docker/Dockerfiles",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "org.rust.cargo.project.model.impl.CargoExternalSystemProjectAware.subscribe.first.balloon": "",
    "org.rust.disableDetachedFileInspection/Users/kentarou/git/research-mqtt-mtd/rust-mqttmtd/tokenmgr/src/tokenset.rs": "true",
    "org.rust.first.attach.projects": "true",
    "rearrange.code.on.save": "true",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/docker/Dockerfiles" />
      <recent name="$PROJECT_DIR$/rust-mqttmtd/tokenmgr/src" />
      <recent name="$PROJECT_DIR$/rust-mqttmtd" />
      <recent name="$PROJECT_DIR$/docker" />
      <recent name="$PROJECT_DIR$/tests/scripts" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/rust-mqttmtd/tokenmgr" />
      <recent name="$PROJECT_DIR$/tests/certs/server" />
      <recent name="$PROJECT_DIR$/tests/certs/ca" />
      <recent name="$PROJECT_DIR$/tests/mqttmtd" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.plain-server">
    <configuration name="Run mqttinterface" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package mqttinterface --bin mqttinterface" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/rust-mqttmtd" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run mqttmtd-authserver" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package mqttmtd-authserver --bin mqttmtd-authserver" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/rust-mqttmtd" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run tokenmgr" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package tokenmgr --bin tokenmgr" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/rust-mqttmtd" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test rust-mqttmtd" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="buildProfileId" value="test" />
      <option name="command" value="test --workspace" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/rust-mqttmtd" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="plain-full" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="envVars">
            <list>
              <DockerEnvVarImpl>
                <option name="name" value="PROTOCOL" />
                <option name="value" value="plain" />
              </DockerEnvVarImpl>
            </list>
          </option>
          <option name="removeOrphansOnComposeDown" value="false" />
          <option name="commandLineOptions" value="--build" />
          <option name="sourceFilePath" value="docker/docker-compose-full.yaml" />
          <option name="upDetach" value="false" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="plain-server" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="envVars">
            <list>
              <DockerEnvVarImpl>
                <option name="name" value="PROTOCOL" />
                <option name="value" value="plain" />
              </DockerEnvVarImpl>
            </list>
          </option>
          <option name="removeOrphansOnComposeDown" value="false" />
          <option name="commandLineOptions" value="--build" />
          <option name="sourceFilePath" value="docker/docker-compose-server.yaml" />
          <option name="upDetach" value="false" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="tls-full" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="envVars">
            <list>
              <DockerEnvVarImpl>
                <option name="name" value="PROTOCOL" />
                <option name="value" value="tls" />
              </DockerEnvVarImpl>
            </list>
          </option>
          <option name="removeOrphansOnComposeDown" value="false" />
          <option name="commandLineOptions" value="--build" />
          <option name="sourceFilePath" value="docker/docker-compose-full.yaml" />
          <option name="upDetach" value="false" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="ws-full" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="envVars">
            <list>
              <DockerEnvVarImpl>
                <option name="name" value="PROTOCOL" />
                <option name="value" value="websocket" />
              </DockerEnvVarImpl>
            </list>
          </option>
          <option name="removeOrphansOnComposeDown" value="false" />
          <option name="commandLineOptions" value="--build" />
          <option name="sourceFilePath" value="docker/docker-compose-full.yaml" />
          <option name="upDetach" value="false" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="wss-full" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="envVars">
            <list>
              <DockerEnvVarImpl>
                <option name="name" value="PROTOCOL" />
                <option name="value" value="wss" />
              </DockerEnvVarImpl>
            </list>
          </option>
          <option name="removeOrphansOnComposeDown" value="false" />
          <option name="commandLineOptions" value="--build" />
          <option name="sourceFilePath" value="docker/docker-compose-full.yaml" />
          <option name="upDetach" value="false" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Cargo.Run mqttinterface" />
      <item itemvalue="Cargo.Run mqttmtd-authserver" />
      <item itemvalue="Cargo.Run tokenmgr" />
      <item itemvalue="Cargo.Test rust-mqttmtd" />
      <item itemvalue="Docker.plain-full" />
      <item itemvalue="Docker.plain-server" />
      <item itemvalue="Docker.tls-full" />
      <item itemvalue="Docker.ws-full" />
      <item itemvalue="Docker.wss-full" />
    </list>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="1bc01236-a6ec-4cbd-8cf4-711f3ebc56a4" name="Changes" comment="" />
      <created>1746003778265</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1746003778265</updated>
      <workItem from="1746003779506" duration="4331000" />
      <workItem from="1746751174973" duration="111000" />
      <workItem from="1746751292948" duration="474000" />
      <workItem from="1746751823995" duration="12334000" />
      <workItem from="1746769511634" duration="6251000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.conf" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="true" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="sync" />
    <option name="LAST_COMMIT_MESSAGE" value="sync" />
  </component>
</project>